// Place your key bindings in this file to override the defaults
[
    {
        "key": "shift+tab",
        "command": "turboConsoleLog.displayLogMessage"
    },
    {
        "key": "ctrl+alt+l",
        "command": "-turboConsoleLog.displayLogMessage"
    },
    {
        "key": "alt+r alt+n",
        "command": "code-runner.run"
    },
    {
        "key": "ctrl+alt+n",
        "command": "-code-runner.run"
    },
    {
        "key": "alt+l alt+p",
        "command": "livePreview.start.preview.atFile"
    },
    {
        "key": "alt+c alt+n",
        "command": "console-ninja.start"
    },
    {
        "key": "alt+\\",
        "command": "tailwind-fold.toggleAutoFold"
    },
    {
        "key": "ctrl+alt+a",
        "command": "-tailwind-fold.toggleAutoFold"
    },
    {
        "key": "alt+c alt+c",
        "command": "extension.colorHelper.convert",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+c c",
        "command": "-extension.colorHelper.convert",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+c alt+p",
        "command": "extension.colorHelper.pick",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+n",
        "command": "explorer.newFolder"
    },
    {
        "key": "ctrl+n",
        "command": "explorer.newFile"
    },
    {
        "key": "alt+left",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "alt+right",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "alt+c p",
        "command": "-extension.colorHelper.pick",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+c alt+c",
        "command": "editor.action.showOrFocusStandaloneColorPicker"
    },
    {
        "key": "ctrl+shift",
        "command": "notebook.fold",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "ctrl+shift+oem_4",
        "command": "-notebook.fold",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "alt+l alt+c",
        "command": "quokka.makeQuokkaFromExistingFile",
        "when": "!quokka.isLiveShareClient && !terminalFocus"
    },
    {
        "key": "ctrl+k q",
        "command": "-quokka.makeQuokkaFromExistingFile",
        "when": "!quokka.isLiveShareClient && !terminalFocus"
    },
    {
        "key": "alt+f",
        "command": "editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "key": "alt+c alt+s",
        "command": "css-property-sorter.sortProperties"
    },
    {
        "key": "alt+r alt+m",
        "command": "extension.cssrem.rem-switch-px"
    },
    {
        "key": "alt+z",
        "command": "-extension.cssrem.rem-switch-px"
    },
    {
        "key": "ctrl+r ctrl+m",
        "command": "extension.cssrem.rpx-switch-px"
    },
    {
        "key": "alt+r",
        "command": "-extension.cssrem.rpx-switch-px"
    },
    {
        "key": "ctrl+r ctrl+m",
        "command": "extension.cssrem"
    },
    {
        "key": "alt+f alt+m",
        "command": "notebook.formatCell",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "shift+alt+f",
        "command": "-notebook.formatCell",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "alt+c alt+t",
        "command": "cssToTailwindCss.convertCssToTailwindCss"
    },
    {
        "key": "alt+d",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus"
    },
    {
        "key": "f12",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus"
    },
    {
        "key": "alt+s",
        "command": "cacher.insertSnippet",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+i",
        "command": "-cacher.insertSnippet",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+q",
        "command": "gistpad.pasteGistFile"
    },
    {
        "key": "alt+k alt+s",
        "command": "workbench.action.openGlobalKeybindings"
    },
    {
        "key": "ctrl+m ctrl+s",
        "command": "-workbench.action.openGlobalKeybindings"
    },
    {
        "key": "alt+m alt+p",
        "command": "markdown.showPreview",
        "when": "!notebookEditorFocused && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+shift+v",
        "command": "-markdown.showPreview",
        "when": "!notebookEditorFocused && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+shift+oem_2",
        "command": "rewrap.rewrapComment",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+q",
        "command": "-rewrap.rewrapComment",
        "when": "editorTextFocus"
    }
]